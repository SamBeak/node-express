express의 공식 홈페이지에 들어가 Getting Start의 Hello world를 들어가면
참조할 수 있는 코드가 있다.
익스프레스를 통해 연결하는 예제 코드다.


import express from "express";
import {
  getNotesAsync,
  getNoteAsync,
  addNotesAsync,
  updateNoteAsync,
  deleteNoteAsync,
} from "./database.js";

const app = express();
const port = 3000;

app.use(express.json()); // for parsing application/json
app.use(express.urlencoded({ extended: true })); // for parsing application/x-www-form-urlencoded

app.get("/", (req, res) => {
  res.send("Hello World!");
});

app.get("/notes", async (req, res) => {
  const result = await getNotesAsync();
  res.send(result);
});

app.get("/note/:id", async (req, res, next) => {
  try {
    const id = req.params.id;
    if (!id) throw new Error(`400@No path parameter`);
    const result = await getNoteAsync(id);
    if (!result) res.send({});
    if (result.length === 0) res.send({});
    res.send(result[0]);
  } catch (err) {
    next(err);
  }
});

app.post("/notes", async (req, res, next) => {
  const { title, contents } = req.body;
  if (!title) res.sendStatus(400);
  if (!contents) res.sendStatus(400);
  const result = await addNotesAsync(title, contents);
  if (typeof result.affectedRows === "undefined")
    throw new Error(`400@Not created`);
  if (result.affectedRows !== 1) throw new Error(`400@Not created`);
  res.sendStatus(201);
});

app.put("/note/:id", async (req, res) => {
  const { title, contents } = req.body;
  const uuid = req.params.id;
  if (!title) res.sendStatus(400);
  if (!contents) res.sendStatus(400);
  if (!uuid) res.sendStatus(400);
  const result = await updateNoteAsync(uuid, title, contents);
  if (result.affectedRows !== 1) throw new Error(`400@Not updated`);
  res.sendStatus(204);
});

app.delete("/note/:id", async (req, res, next) => {
  try {
    const uuid = req.params.id;
    if (!uuid) throw new Error(`400@No path parameter`);
    const result = await deleteNoteAsync(uuid);
    if (result.affectedRows !== 1) throw new Error(`400@Not deleted`);
    res.sendStatus(204);
  } catch (err) {
    next(err);
  }
});

app.use((err, req, res, next) => {
  console.error(err.stack);
  res.status(500).send("Something broke!");
});

app.listen(port, () => {
  console.log(`Example app listening on port ${port}`);
});
